import { describe, it, expect } from 'vitest';
import { MemoryFormatter } from '../memoryFormatter';

describe('Memory Integration Test', () => {
  const formatter = new MemoryFormatter();

  it('should extract content and format properly', async () => {
    const sampleContent = `📝 Larry's Complete Diary Feedback for taka_31823
═══════════════════════════════════════════════════════

🎯 DETECTED LANGUAGE: 🇯🇵 Japanese
📝 SCENARIO: JAPANESE ONLY

📝 TARGET SENTENCE:
イシューとは、イシューであると気づけるかが、最大のイシューなんです

═══════════════════════════════════════════════════════

📚 THREE LEVEL ENGLISH TRANSLATIONS:

🟢 BEGINNER LEVEL:
The biggest issue is being able to notice an issue.

🟡 INTERMEDIATE LEVEL:
The main challenge is being able to recognize something as an issue.

🔴 UPPER LEVEL:
The paramount challenge is the ability to discern whether a matter truly constitutes an issue.

═══════════════════════════════════════════════════════
Generated by Larry • Canadian English Tutor
Timestamp: 2025-08-20T05:06:18.137Z`;

    // Test validation
    const isValid = formatter.validateMemoryContent(sampleContent);
    expect(isValid).toBe(true);

    // Test extraction
    const extracted = formatter.extractContent(sampleContent);
    expect(extracted.targetSentence).toBe('イシューとは、イシューであると気づけるかが、最大のイシューなんです');
    expect(extracted.translationSection).toContain('🟢 BEGINNER LEVEL:');
    expect(extracted.translationSection).toContain('The biggest issue is being able to notice an issue.');

    // Test formatting
    const formatted = await formatter.formatForObsidian(sampleContent);
    expect(formatted).toContain('イシューとは、イシューであると気づけるかが、最大のイシューなんです');
    expect(formatted).toContain('?');
    expect(formatted).toContain('#flashcards/vocab/ja-to-en #vocabulary');
    expect(formatted).toContain('🟢 BEGINNER LEVEL:');

    console.log('📄 Formatted content:');
    console.log(formatted);
  });

  it('should generate clean filenames', () => {
    const filename = formatter.generateVocabularyFilename();
    
    expect(filename).toMatch(/^vocabulary-\d{4}-\d{2}-\d{2}T\d{2}-\d{2}-\d{2}\.md$/);
    expect(filename).not.toContain('\\u');
    expect(filename).not.toContain('%');
    
    console.log('📂 Generated filename:', filename);
  });

  it('should handle content without translation markers gracefully', async () => {
    const simpleContent = 'こんにちは、世界！';
    
    const isValid = formatter.validateMemoryContent(simpleContent);
    expect(isValid).toBe(false);
    
    const extracted = formatter.extractContent(simpleContent);
    expect(extracted.targetSentence).toBe('こんにちは、世界！');
    expect(extracted.translationSection).toBe('');
    
    const formatted = await formatter.formatForObsidian(simpleContent);
    expect(formatted).toContain('こんにちは、世界！');
    expect(formatted).toContain('見つかりませんでした');
  });
});